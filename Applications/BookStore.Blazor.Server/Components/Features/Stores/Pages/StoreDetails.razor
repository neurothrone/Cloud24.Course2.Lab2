@page "/stores/details"
@rendermode InteractiveServer

@using BookStore.Persistence.EFCore.Data
@using BookStore.Persistence.EFCore.Models
@using BookStore.Blazor.Server.Components.Features.Stores.Controls
@using Microsoft.EntityFrameworkCore

<PageTitle>Store Details</PageTitle>
<h3>Store Details</h3>

@if (_isBusy || _store is null)
{
    <LoadingIndicator/>
}
else if (_store is not null)
{
    <StoreInfo class="mt-3"
               Store="_store"/>

    <h4>Inventory</h4>

    <a href=@($"/stores/edit?id={_store.Id}")
       class="btn btn-primary mb-3">
        Add Book
    </a>
    <StoreInventory Store="_store"/>
}

@code {

    [SupplyParameterFromQuery(Name = "id")]
    private int StoreId { get; set; }

    [Inject]
    private NavigationManager Navigation { get; set; } = null!;

    [Inject]
    private IDbContextFactory<BookStoreDbContext> ContextFactory { get; set; } = null!;

    private Store? _store;
    private bool _isBusy;

    protected override async Task OnInitializedAsync()
    {
        _isBusy = true;

        try
        {
            await using var context = await ContextFactory.CreateDbContextAsync();
            _store = await context.Stores
                .AsNoTracking()
                .FirstOrDefaultAsync(s => s.Id == StoreId);
        }
        finally
        {
            _isBusy = false;
        }

        if (_store is null)
            Navigation.NavigateTo("/404");
    }

}