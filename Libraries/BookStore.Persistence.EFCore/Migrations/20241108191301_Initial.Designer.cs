// <auto-generated />
using System;
using BookStore.Persistence.EFCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStore.Persistence.EFCore.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20241108191301_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("BookStore.Persistence.EFCore.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1775, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1903, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1835, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mark",
                            LastName = "Twain"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1882, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Virginia",
                            LastName = "Woolf"
                        });
                });

            modelBuilder.Entity("BookStore.Persistence.EFCore.Models.Book", b =>
                {
                    b.Property<string>("Isbn13")
                        .HasMaxLength(17)
                        .HasColumnType("TEXT");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int>("Pages")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Isbn13");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Isbn13 = "9780141439518",
                            AuthorId = 1,
                            Language = "English",
                            Pages = 279,
                            Price = 9.99m,
                            ReleaseDate = new DateTime(1813, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Isbn13 = "9780141439471",
                            AuthorId = 1,
                            Language = "English",
                            Pages = 392,
                            Price = 9.99m,
                            ReleaseDate = new DateTime(1811, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sense and Sensibility"
                        },
                        new
                        {
                            Isbn13 = "9780451524935",
                            AuthorId = 2,
                            Language = "English",
                            Pages = 328,
                            Price = 14.99m,
                            ReleaseDate = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "1984"
                        },
                        new
                        {
                            Isbn13 = "9781451628963",
                            AuthorId = 3,
                            Language = "English",
                            Pages = 274,
                            Price = 7.99m,
                            ReleaseDate = new DateTime(1876, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Adventures of Tom Sawyer"
                        },
                        new
                        {
                            Isbn13 = "9780099511408",
                            AuthorId = 4,
                            Language = "English",
                            Pages = 194,
                            Price = 12.99m,
                            ReleaseDate = new DateTime(1925, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mrs. Dalloway"
                        });
                });

            modelBuilder.Entity("BookStore.Persistence.EFCore.Models.InventoryBalance", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Isbn13")
                        .HasMaxLength(17)
                        .HasColumnType("TEXT");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("StoreId", "Isbn13");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Isbn13");

                    b.ToTable("InventoryBalances");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            Isbn13 = "9780141439518",
                            Quantity = 10
                        },
                        new
                        {
                            StoreId = 1,
                            Isbn13 = "9780141439471",
                            Quantity = 3
                        },
                        new
                        {
                            StoreId = 2,
                            Isbn13 = "9780141439518",
                            Quantity = 5
                        },
                        new
                        {
                            StoreId = 2,
                            Isbn13 = "9780451524935",
                            Quantity = 15
                        },
                        new
                        {
                            StoreId = 2,
                            Isbn13 = "9781451628963",
                            Quantity = 7
                        },
                        new
                        {
                            StoreId = 3,
                            Isbn13 = "9780099511408",
                            Quantity = 8
                        });
                });

            modelBuilder.Entity("BookStore.Persistence.EFCore.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kungsgatan 34, 411 19 Göteborg",
                            Name = "Adlibris"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Nordstan, Norra Hamngatan 26, 411 06 Göteborg",
                            Name = "Akademibokhandeln"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Götabergsgatan 17 411 34 Göteborg",
                            Name = "Campusbokhandeln"
                        });
                });

            modelBuilder.Entity("BookStore.Persistence.EFCore.Models.Book", b =>
                {
                    b.HasOne("BookStore.Persistence.EFCore.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BookStore.Persistence.EFCore.Models.InventoryBalance", b =>
                {
                    b.HasOne("BookStore.Persistence.EFCore.Models.Author", null)
                        .WithMany("InventoryBalances")
                        .HasForeignKey("AuthorId");

                    b.HasOne("BookStore.Persistence.EFCore.Models.Book", "Book")
                        .WithMany("InventoryBalances")
                        .HasForeignKey("Isbn13")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Persistence.EFCore.Models.Store", "Store")
                        .WithMany("InventoryBalances")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("BookStore.Persistence.EFCore.Models.Author", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("InventoryBalances");
                });

            modelBuilder.Entity("BookStore.Persistence.EFCore.Models.Book", b =>
                {
                    b.Navigation("InventoryBalances");
                });

            modelBuilder.Entity("BookStore.Persistence.EFCore.Models.Store", b =>
                {
                    b.Navigation("InventoryBalances");
                });
#pragma warning restore 612, 618
        }
    }
}
